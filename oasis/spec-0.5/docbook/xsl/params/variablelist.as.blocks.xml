<refentry id="variablelist.as.blocks">
<refmeta>
<refentrytitle>variablelist.as.blocks</refentrytitle>
<refmiscinfo role="type">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>variablelist.as.blocks</refname>
<refpurpose>Format <sgmltag>variablelist</sgmltag>s lists as blocks?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id='variablelist.as.blocks.frag'>
<xsl:param name="variablelist.as.blocks" select="0"/>
</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>If non-zero, <sgmltag>variablelist</sgmltag>s will be formatted as
blocks.</para>

<para>If you have long terms, proper list markup in the FO case may produce
unattractive lists. By setting this parameter, you can force the stylesheets
to produce block markup instead of proper lists.</para>

<para>You can override this setting with a processing instruction as the
child of <sgmltag>variablelist</sgmltag>: <sgmltag class="pi">dbfo
list-presentation="blocks"</sgmltag> or <sgmltag class="pi">dbfo
list-presentation="list"</sgmltag>.</para>

<para>When using <literal>list-presentation="list"</literal>,
you can also control the amount of space used for the <sgmltag>term</sgmltag>s with 
the <sgmltag class="pi">dbfo term-width=".25in"</sgmltag> processing instruction,
the <sgmltag class="attribute">termlength</sgmltag> attribute on <sgmltag>variablelist</sgmltag>,
or allow the stylesheets to attempt to calculate the amount of space to leave based on the 
number of letters in the longest term.  
</para>

<programlisting><![CDATA[  <variablelist>
        <?dbfo list-presentation="list"?>
        <?dbfo term-width="1.5in"?>
        <?dbhtml list-presentation="table"?>
        <?dbhtml term-width="1.5in"?>
        <varlistentry>
          <term>list</term>
          <listitem>
                <para>
                  Formatted as a list even if variablelist.as.blocks is set to 1.
                </para>
          </listitem>
        </varlistentry>
  </variablelist>]]></programlisting>


</refsect1>

</refentry>
